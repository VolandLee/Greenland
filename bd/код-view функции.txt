"""
Как проходит 1 цикл поставки.
Вначале supply_manager добавляет 
supplier, barcode, product в таком порядке.
Если такие поля уже есть в табличке, например: продукт уже создан, нужно пополнить склад и т.д,
то пропускаем создание и двигаемся к следующий функции. В итоге концом работы supply_manager
должен стать созданный supplier_order.


После этого подключается другой работник logistician
Он создаёт цепочку перемещений-строк в таблице supplier_route  в первом перемещении supplier_routes.point_id = supplier_order.from_premise
а в последней строке supplier_routes.next_point_id = supplier_order.to_premise. Не обязательно логист должен создавать цепочку от начала до конца.
Он может вообще сразу ничего не создавать, а когда сочтёт выгодным это перемещение, но соответсвенно и товар никуда не отправиться, т.к. неизвестно, куда его везти. 
 


Как только logistician создал путь хотя бы 1 в цепочки перемещений, то товар может скоро отправиться.


Роль  goodslist_employyes начинается с того момента как кто-то привёз товар на склад или собирается забрать со склада accept_goodslist(),
end_goodslist(). Допустим на прошлом шаге logistician создал путь, дальше нашёлся доставщик и пришёл заюирать товар со склада. Вызывается одноимённая функция.
Когда пришёл отдать товар функция приёма.




Нужно реализовать обмен между view функций. Я предлагаю осуществлять этот обмен использую django session
https://docs.djangoproject.com/en/4.1/topics/http/sessions/
использовать словарь.




"""

# Функции роли supply_manager
def add_product()



def add_barcode()



def add_supplier()


def add_supplier_order()


def add_premises()
premise_type 4 - склад поставщика




# Функции роли goodslist_employyes

def add_goodslist()


def accept_goodslist()



def send_goodslist()


# Функции роли  logistician

def add_supplier_route()

